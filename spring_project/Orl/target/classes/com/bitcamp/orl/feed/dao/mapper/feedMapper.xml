<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bitcamp.orl.feed.dao.FeedDao">

	<!-- 피드 작성 -->
	<insert id="createFeed"
			parameterType="com.bitcamp.orl.feed.domain.Feed"
			useGeneratedKeys="true" keyProperty="boardIdx">
		insert into photoBoard (boardPhoto, boardDiscription, hashtag, tag, memberIdx)
		values (#{boardPhoto}, #{boardDiscription}, #{hashtag}, #{tag}, #{memberIdx});
	</insert>

	<!-- 전체 피드 리스트 (최신순) -->
	<select id="selectNewFeed"
			resultType="com.bitcamp.orl.feed.domain.NewFeedList">
		select boardIdx, boardPhoto, memberIdx from photoBoard order by boardIdx DESC;
	</select>

	<!-- 전체 피드 리스트 (인기순) -->
	<!-- <select id="selectHotFeed"
		resultType="com.bitcamp.orl.feed.domain.HotFeedList">
	select * from photoBoard order by like 조인해야된다~~~~ </select> -->


	<!--  -->
	<!--  -->
	<!--  -->



	<!-- 1. 팔로워수 가져오기 -->
	<select id="selectFollowerCount" resultType="int">
		select count(*)
		from final.follow
		where memberIdx2 = #{memberIdx};
	</select>


	<!-- 2. 팔로잉 수 가져오기 -->

	<select id="selectFollowingCount" resultType="int">
		select count(*)
		from final.follow
		where memberIdx = #{memberIdx};


	</select>


	<!-- 3. 팔로잉 리스트 가져오기 (비동기통신) -->
	<select id="selectFollowingList"
		resultType="com.bitcamp.orl.feed.domain.FollowList">
		select F.followIdx, F.memberIdx, F.memberIdx2,
		M.memberNickname,M.memberProfile
		from final.follow as F inner join final.member as M
		on F.memberIdx2 = M.memberIdx
		where F.memberIdx = #{memberIdx};
	</select>

	<!-- 4. 팔로워 리스트 가져오기 (비동기통신) -->

	<select id="selectFollowerList"
		resultType="com.bitcamp.orl.feed.domain.FollowList">
		select F.followIdx, F.memberIdx, F.memberIdx2,
		M.memberNickname,M.memberProfile
		from final.follow as F inner join final.member as M
		on F.memberIdx = M.memberIdx
		where F.memberIdx2 = #{memberIdx};
	</select>


	<!-- 5. 게시물 갯수 가져오기 -->
	<select id="selectFeedCount" resultType="int">
		select count(*)
		from final.photoBoard
		where memberIdx = #{memberIdx};

	</select>

	<!-- 6. member 정보 가져오기 -->
	<select id="selectOneMember"
		resultType="com.bitcamp.orl.member.domain.Member">
		select *
		from member
		where memberIdx=#{memberIdx}
	</select>


	<!-- 7. 나와 남의 관계: 팔로우 관계인가 아닌가를 확인,결과는 1또는0 , 첫요청에 사용 -->
	<select id="selectFollowRelation" resultType="int">
		select count(*)
		from final.follow
		where memberIdx = #{param1} and memberIdx2 = #{param2};
	</select>


	<!-- 8. 팔로우 시작하기 (비동기통신) -->
	<insert id="insertFollowMember">
		insert into final.follow
		(memberIdx, memberIdx2)
		values(#{param1},#{param2});
	</insert>

	<!-- 9. 팔로우 그만하기(비동기통신) -->

	<delete id="deleteFollowMember">
		delete
		from final.follow
		where memberIdx =#{param1} and memberIdx2 = #{param2};

	</delete>

	<!-- 10. 피드 갤러리 기본 정렬 가져오기(첫요청) , 최근거를 위로 -->
	<select id="selectFeedGallery"
		resultType="com.bitcamp.orl.feed.domain.FeedGallery">
		select boardIdx, boardPhoto
		from photoBoard
		where memberIdx = #{memberIdx}
		order by boardIdx DESC;

	</select>

	<!--11. 내 피드에서 좋아요 정렬 보여주기 -->
	<select id="selectFeedLikeGallery"
		resultType="com.bitcamp.orl.feed.domain.FeedLikeGallery">
		select photoBoard.boardIdx, photoBoard.boardPhoto, photoBoard.memberIdx
		from final.like inner join final.photoBoard
		on final.like.boardIdx = final.photoBoard.boardIdx
		where final.like.memberIdx =#{memberIdx} and photoBoard.memberIdx !=
		#{memberIdx}
		order by photoBoard.boardIdx DESC;

	</select>



</mapper>