<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bitcamp.orl.feed.dao.FeedDao">

	<!--관리자용 추가0915 -->
	<!-- 모든 항목가져오는 전체 피드 리스트 -->
	<select id="selectAllFeed"
		resultType="com.bitcamp.orl.feed.domain.FeedView">
		SELECT B.boardIdx, B.boardPhoto, B.boardDiscription,
		B.hashtag, B.tag, M.memberIdx, M.memberNickname, M.memberProfile
		FROM
		final.photoBoard AS B NATURAL JOIN final.member AS M ORDER BY
		B.boardIdx DESC;
	</select>

	<!-- 피드 삭제 -->
	<delete id="deleteFeedByAdmin">
		DELETE FROM final.photoBoard WHERE boardIdx =
		#{boardIdx};
	</delete>

	<!-- 용민 -->
	<!-- 산별 피드보기 -->
	<select id="selectNewFeedByMountain"
		resultType="com.bitcamp.orl.feed.domain.NewFeedList">
		select
		P.boardIdx, P.boardPhoto, P.boardDate, M.memberIdx, M.memberNickname
		from final.photoBoard as P natural join final.member as M
		where
		P.hashtag regexp #{mName}
		order by P.boardIdx DESC;
	</select>




	<!-- 우리 -->

	<!-- 피드 작성 -->
	<insert id="createFeed"
		parameterType="com.bitcamp.orl.feed.domain.Feed"
		useGeneratedKeys="true" keyProperty="boardIdx">
		INSERT INTO photoBoard
		(boardPhoto, boardDiscription, hashtag, tag, memberIdx)
		VALUES
		(#{boardPhoto}, #{boardDiscription}, #{hashtag}, #{tag},
		#{memberIdx});
	</insert>

	<!-- 피드 상세보기 -->
	<select id="selectFeedView"
		resultType="com.bitcamp.orl.feed.domain.FeedView">
		SELECT B.boardIdx, B.boardPhoto, B.boardDiscription,
		B.hashtag, B.tag, M.memberIdx, M.memberNickname, M.memberProfile
		FROM
		final.photoBoard AS B NATURAL JOIN final.member AS M
		WHERE B.boardIdx =
		#{boardIdx};
	</select>

	<!-- 피드 수정 -->
	<update id="editFeed">
		UPDATE final.photoBoard SET
		boardDiscription=#{boardDiscription}, hashtag=#{hashtag}, tag=#{tag}
		WHERE boardIdx = #{boardIdx};
	</update>

	<!-- 피드 삭제 (ajax) -->
	<delete id="deleteFeed">
		DELETE FROM final.photoBoard WHERE memberIdx
		=#{memberIdx} and boardIdx = #{boardIdx};
	</delete>

	<!-- 피드 댓글 작성 -->
	<insert id="insertFeedComment"
		parameterType="com.bitcamp.orl.feed.domain.FeedComment"
		useGeneratedKeys="true" keyProperty="boardCommentIdx">
		INSERT INTO
		final.photoBoardComment (comment, boardIdx, memberIdx) VALUES
		(#{comment}, #{boardIdx}, #{memberIdx});
	</insert>

	<!-- 피드 댓글 삭제 (ajax) -->
	<delete id="deleteComment">
		DELETE FROM final.photoBoardComment WHERE
		boardCommentIdx = #{boardCommentIdx};
	</delete>

	<!-- 피드 상세 -댓글리스트 (ajax) -->
	<select id="selectFeedComment"
		resultType="com.bitcamp.orl.feed.domain.FeedComment">
		SELECT C.boardCommentIdx, C.comment, C.memberIdx,
		M.memberNickname, M.memberProfile
		FROM final.photoBoardComment AS C
		NATURAL JOIN final.member AS M
		WHERE boardIdx = #{boardIdx}
		ORDER BY
		C.boardCommentIdx DESC;
	</select>

	<!-- 전체 피드 리스트 (최신순) (ajax) -->
	<select id="selectNewFeed"
		resultType="com.bitcamp.orl.feed.domain.NewFeedList">
		SELECT B.boardIdx, B.boardPhoto, B.boardDate, M.memberIdx,
		M.memberNickname
		FROM final.photoBoard AS B NATURAL JOIN final.member
		AS M
		ORDER BY B.boardIdx DESC;
	</select>





	<!-- 세라 -->

	<!-- 1. 팔로워수 가져오기 -->
	<select id="selectFollowerCount" resultType="int">
		select count(*)
		from final.follow
		where memberIdx2 = #{memberIdx};
	</select>


	<!-- 2. 팔로잉 수 가져오기 -->

	<select id="selectFollowingCount" resultType="int">
		select count(*)
		from final.follow
		where memberIdx = #{memberIdx};


	</select>


	<!-- 3. 팔로잉 리스트 가져오기 (비동기통신) -->
	<select id="selectFollowingList"
		resultType="com.bitcamp.orl.feed.domain.FollowList">
		select F.followIdx, F.memberIdx, F.memberIdx2,
		M.memberNickname,M.memberProfile
		from final.follow as F inner join final.member as M
		on F.memberIdx2 = M.memberIdx
		where F.memberIdx = #{memberIdx};
	</select>

	<!-- 4. 팔로워 리스트 가져오기 (비동기통신) -->

	<select id="selectFollowerList"
		resultType="com.bitcamp.orl.feed.domain.FollowList">
		select F.followIdx, F.memberIdx, F.memberIdx2,
		M.memberNickname,M.memberProfile
		from final.follow as F inner join final.member as M
		on F.memberIdx = M.memberIdx
		where F.memberIdx2 = #{memberIdx};
	</select>


	<!-- 5. 게시물 갯수 가져오기 -->
	<select id="selectFeedCount" resultType="int">
		select count(*)
		from final.photoBoard
		where memberIdx = #{memberIdx};

	</select>

	<!-- 6. member 정보 가져오기 -->
	<select id="selectOneMember"
		resultType="com.bitcamp.orl.member.domain.Member">
		select *
		from member
		where memberIdx=#{memberIdx}
	</select>


	<!-- 7. 나와 남의 관계: 팔로우 관계인가 아닌가를 확인,결과는 1또는0 , 첫요청에 사용 -->
	<select id="selectFollowRelation" resultType="int">
		select count(*)
		from final.follow
		where memberIdx = #{myIdx} and memberIdx2 = #{yourIdx};
	</select>


	<!-- 8. 팔로우 시작하기 (비동기통신) -->
	<insert id="insertFollowMember">
		insert into final.follow
		(memberIdx, memberIdx2)
		values(#{myIdx},#{yourIdx});
	</insert>

	<!-- 9. 팔로우 그만하기(비동기통신) -->

	<delete id="deleteFollowMember">
		delete
		from final.follow
		where memberIdx =#{myIdx} and memberIdx2 = #{yourIdx};

	</delete>

	<!-- 10. 피드 갤러리 기본 정렬 가져오기(첫요청) , 최근거를 위로 -->
	<select id="selectFeedGallery"
		resultType="com.bitcamp.orl.feed.domain.FeedGallery">
		select boardIdx, boardPhoto
		from photoBoard
		where memberIdx = #{memberIdx}
		order by boardIdx DESC;

	</select>

	<!--11. 내 피드에서 좋아요 정렬 보여주기 -->
	<select id="selectFeedLikeGallery"
		resultType="com.bitcamp.orl.feed.domain.FeedLikeGallery">
		select photoBoard.boardIdx, photoBoard.boardPhoto, photoBoard.memberIdx
		from final.like inner join final.photoBoard
		on final.like.boardIdx = final.photoBoard.boardIdx
		where final.like.memberIdx =#{memberIdx} and photoBoard.memberIdx !=
		#{memberIdx}
		order by photoBoard.boardIdx DESC;

	</select>


	<!-- 12. 좋아요 누른 상태인지 아닌지 -->
	<select id="selectLikeStatus" resultType="int">
		select count(*)
		from final.like
		where memberIdx = #{myIdx} and boardIdx = #{boardIdx};
	</select>


	<!-- 13. 좋아요 누르기 -->
	<insert id="insertLike">
		insert into final.like
		(memberIdx,boardIdx)
		values (#{memberIdx}, #{boardIdx});
	</insert>


	<!-- 14. 좋아요 취소 -->
	<delete id="deleteLike">
		delete from final.like
		where memberIdx=#{memberIdx} and boardIdx =#{boardIdx};
	</delete>

	<!-- 15. 좋아요 갯수 0910 -->
	<select id="selectTotalLikeCount" resultType="int">
		select count(*)
		from final.like
		where boardIdx = #{boardIdx};
	</select>

	<!-- 16. 피드 인기순 정렬 수정 0915, 좋아요 갯수 0도 출력(view 만들어서 사용) -->
	<select id="selectFeedOrderByLike"
		resultType="com.bitcamp.orl.feed.domain.NewFeedList">
		select P.boardIdx, P.boardPhoto,P.boardDate, P.memberIdx, (select
		M.memberNickname from final.member as M where P.memberIdx =
		M.memberIdx) as memberNickname
		from final.photoBoard as P left join final.countLike as L
		on L.boardIdx = P.boardIdx
		order by L.count DESC;
	</select>

	<!-- 17. 피드 검색 - 해시태그로 검색 -->
	<select id="selectByHashtag"
		resultType="com.bitcamp.orl.feed.domain.NewFeedList">
		select P.boardIdx, P.boardPhoto, P.boardDate, M.memberIdx, M.memberNickname
		from final.photoBoard as P natural join final.member as M
		where P.hashtag regexp #{hashtag}
		order by P.boardIdx DESC;
	</select>

	<!-- 18. 피드 검색 - 닉네임으로 검색 -->
	<select id="selectByNickname"
		resultType="com.bitcamp.orl.feed.domain.FeedSearchByNickname">
		select memberIdx, memberNickname, memberProfile
		from final.member
		where memberNickname regexp #{nickname};
	</select>

</mapper>